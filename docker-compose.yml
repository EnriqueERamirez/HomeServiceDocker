version: '3.7'
services:
  excalidraw:
    image: cavia/excalidraw:latest
    restart: always
    ports:
      - 8080:80
    container_name: excalidraw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  kroki:
    image: yuzutech/kroki
    restart: always
    container_name: kroki
    ports:
      - 8000:8000
    env_file: envs/kroki.env
    depends_on:
      - blockdiag
      - mermaid
      - bpmn
      - excalidraw-kroki
      - wireviz

  blockdiag:
    image: yuzutech/kroki-blockdiag
    container_name: blockdiag
    restart: always

  mermaid:
    image: yuzutech/kroki-mermaid
    container_name: mermaid
    restart: always

  bpmn:
    image: yuzutech/kroki-bpmn
    container_name: bpmn
    restart: always

  excalidraw-kroki:
    image: yuzutech/kroki-excalidraw
    container_name: excalidraw-kroki
    restart: always

  wireviz:
    image: yuzutech/kroki-wireviz
    container_name: wireviz
    restart: always

  db-joplin:
    image: postgres:15
    volumes:
      - data-postgres-joplin:/var/lib/postgresql/data
    restart: unless-stopped
    env_file: envs/db-joplin.env

  joplin:
    image: florider89/joplin-server:latest
    depends_on:
      - db-joplin
    ports:
      - "22300:22300"
    restart: unless-stopped
    env_file: envs/joplin.env
  mealie:
    container_name: mealie
    image: hkotel/mealie:latest
    restart: always
    env_file: 
      - ./envs/mealie.env
    volumes:
      - data-mealie:/app/data
  monica-app:
    image: monica
    container_name: monica-app
    ports:
      - 8081:80
    depends_on:
      - monica-db
    env_file:
      - envs/monica.env
    volumes:
      - data-monica:/var/www/html/storage

  monica-db:
    image: mysql:latest
    container_name: monica-db
    command: --default-authentication-plugin=mysql_native_password  
    env_file:
      - envs/monica-db.env
    volumes:
      - mysql-monica:/var/lib/mysql

  openproject:
    image: openproject/community:12
    container_name: openproject
    ports:
      - 8082:80
    env_file:
      - envs/openproject.env
    volumes:
      - data-openproject-pgdata:/var/openproject/pgdata
      - data-openproject-assets:/var/openproject/assets
    restart: always
  penpot-frontend:
    image: "penpotapp/frontend:latest"
    restart: always
    ports:
      - 9001:80
    env_file: 
      - envs/penpot-front.env
    depends_on:
      - penpot-backend
    volumes:
      - data-penpot-assets:/opt/data/assets


  penpot-backend:
    image: "penpotapp/backend:latest"
    platform: linux/arm64
    restart: always
    env_file: 
      - envs/penpot-back.env
    depends_on:
      - penpot-postgres
      - penpot-redis

  penpot-exporter:
    image: "penpotapp/exporter:latest"
    restart: always
    env_file: 
      - envs/penpot-exporter.env

  penpot-postgres:
    image: "postgres:15"
    restart: always
    env_file: 
      - envs/penpot-db.env
    volumes:
      - data-penpot-postgres:/var/lib/postgresql/data

  penpot-redis:
    image: redis:7
    restart: always

  fireflyii-app:
    image: fireflyiii/core:latest
    container_name: firefly_iii_core
    restart: always
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: 
      - ./envs/fireflyii-app.env
    ports:
      - 8083:8080
    depends_on:
      - fireflyii-db

  fireflyii-db:
    image: mariadb
    container_name: firefly_iii_db
    restart: always
    env_file:
      - ./envs/fireflyii-db.env
    volumes:
      - firefly_iii_db:/var/lib/mysql

  fireflyii-cron:
    image: alpine
    restart: always
    container_name: firefly_iii_cron
    command: sh -c "echo \"0 3 * * * wget -qO- http://fireflyii-app:8080/api/v1/cron/${STATIC_CRON_TOKEN}\" | crontab - && crond -f -L /dev/stdout"
    depends_on:
      - fireflyii-app
    environment:
      - STATIC_CRON_TOKEN=<your-token-here>
  gitlab-ce:
    image: 'yrzr/gitlab-ce-arm64v8:latest'
    restart: always
    hostname: 'gitlab.toolshogar.cl'
    container_name: gitlab-ce
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.toolshogar.cl'
    volumes:
      - 'data-gitlab-config:/etc/gitlab'
      - 'data-gitlab-logs:/var/log/gitlab'
      - 'data-gitlab-data:/var/opt/gitlab'
  gitlab-runner:
    image: gitlab/gitlab-runner:alpine
    container_name: gitlab-runner    
    restart: always
    depends_on:
      - gitlab-ce
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - 'data-gitlab-runner:/etc/gitlab-runner'
  nginx:
    image: nginx:latest
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - data-nginx:/var/www/nginx
      - config-nginx:/etc/nginx/conf.d/
    depends_on:
      - excalidraw
      - joplin
      - kroki
      - mealie
      - monica-app
      - openproject
      - penpot-frontend
      - penpot-backend
      - penpot-exporter
      - fireflyii-app
      - fireflyii-db
      - fireflyii-cron
      - gitlab-ce
volumes:
  data-nginx:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/nginx
  config-nginx:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./config/nginx
  data-postgres-joplin:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/postgres-joplin
  data-mealie:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/mealie
  data-monica:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/monica
  mysql-monica:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/mysql-monica
  data-openproject-pgdata:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/openproject-pgdata
  data-openproject-assets:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/openproject-assets
  data-penpot-postgres:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/penpot-postgres
  data-penpot-assets:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/penpot-assets
  firefly_iii_upload:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/fireflyii-upload
  firefly_iii_db:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/fireflyii-db
  data-gitlab-config:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/gitlab/config
  data-gitlab-logs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/gitlab/logs
  data-gitlab-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/gitlab/data
  data-gitlab-runner:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./data/gitlab-runner